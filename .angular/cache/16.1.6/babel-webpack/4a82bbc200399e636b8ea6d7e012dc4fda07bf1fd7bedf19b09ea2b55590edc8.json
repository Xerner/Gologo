{"ast":null,"code":"import { inject } from '@angular/core';\nimport PlayerScore from 'src/library/PlayerScore';\nimport { GameObjectService } from 'src/app/services/game-object.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LeftMenuComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 3)(2, \"div\", 4)(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 4)(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"percent\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const score_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(score_r1.name);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 2, score_r1.accuracy()));\n  }\n}\nexport class LeftMenuComponent {\n  constructor() {\n    this.score = new PlayerScore();\n    this.highscores = [new PlayerScore(), new PlayerScore(), new PlayerScore(), new PlayerScore(), new PlayerScore()];\n    this.gameObjectService = inject(GameObjectService);\n  }\n  ngOnInit() {\n    this.gameObjectService.onGameStart.subscribe(this.handleSceneReady.bind(this));\n  }\n  handleSceneReady() {\n    this.player = this.gameObjectService.gameObjects.get('player');\n    if (this.player === undefined) throw new Error('player not found');\n    this.player.onShotFired.subscribe(this.handlePlayerShotFired.bind(this));\n    this.player.onEnemyKilled.subscribe(this.handleEnemyKilled.bind(this));\n  }\n  handlePlayerShotFired() {\n    this.score.shotsFired++;\n  }\n  handleEnemyKilled() {\n    this.score.hits++;\n  }\n  top10() {\n    return this.highscores.sort((a, b) => b.hits - a.hits).slice(0, 10);\n  }\n}\nLeftMenuComponent.ɵfac = function LeftMenuComponent_Factory(t) {\n  return new (t || LeftMenuComponent)();\n};\nLeftMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LeftMenuComponent,\n  selectors: [[\"app-left-menu\"]],\n  decls: 35,\n  vars: 7,\n  consts: [[1, \"w-100\", \"bg-secondary\", \"rounded\", \"p-3\", \"mb-3\", \"mt-3\"], [1, \"mb-3\"], [1, \"text-light\"], [1, \"row\"], [1, \"col-6\", \"text-light\"], [1, \"text-light\", 2, \"margin-left\", \"-16px\", \"margin-right\", \"-16px\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"text\", \"placeholder\", \"Enter your name\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"btn\", \"btn-primary\"]],\n  template: function LeftMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n      i0.ɵɵtext(3, \"Score\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"div\", 4)(6, \"span\");\n      i0.ɵɵtext(7, \"Shots\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"span\");\n      i0.ɵɵtext(10);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"span\");\n      i0.ɵɵtext(13, \"Hits\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"span\");\n      i0.ɵɵtext(16);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"span\");\n      i0.ɵɵtext(19, \"Accuracy\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(20, \"div\", 4)(21, \"span\");\n      i0.ɵɵtext(22);\n      i0.ɵɵpipe(23, \"percent\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelement(24, \"hr\", 5);\n      i0.ɵɵelementStart(25, \"div\", 1)(26, \"h3\", 2);\n      i0.ɵɵtext(27, \"High Scores\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(28, LeftMenuComponent_div_28_Template, 9, 4, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"hr\", 5);\n      i0.ɵɵelementStart(30, \"div\")(31, \"div\", 1)(32, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LeftMenuComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.score.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"button\", 8);\n      i0.ɵɵtext(34, \"Submit Score\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵtextInterpolate(ctx.score.shotsFired);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(ctx.score.hits);\n      i0.ɵɵadvance(6);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(23, 5, ctx.score.accuracy()));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngForOf\", ctx.top10());\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.score.name);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.PercentPipe],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["inject","PlayerScore","GameObjectService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","score_r1","name","ɵɵpipeBind1","accuracy","LeftMenuComponent","constructor","score","highscores","gameObjectService","ngOnInit","onGameStart","subscribe","handleSceneReady","bind","player","gameObjects","get","undefined","Error","onShotFired","handlePlayerShotFired","onEnemyKilled","handleEnemyKilled","shotsFired","hits","top10","sort","a","b","slice","selectors","decls","vars","consts","template","LeftMenuComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LeftMenuComponent_div_28_Template","ɵɵlistener","LeftMenuComponent_Template_input_ngModelChange_32_listener","$event","ɵɵproperty"],"sources":["C:\\Users\\km629\\Desktop\\Other\\Gologo\\src\\app\\components\\left-menu\\left-menu.component.ts","C:\\Users\\km629\\Desktop\\Other\\Gologo\\src\\app\\components\\left-menu\\left-menu.component.html"],"sourcesContent":["import { Component, OnInit, inject } from '@angular/core';\nimport PlayerScore from 'src/library/PlayerScore';\nimport ShipComponent from '../ship/ship.component';\nimport { GameObjectService } from 'src/app/services/game-object.service';\n\n@Component({\n  selector: 'app-left-menu',\n  templateUrl: './left-menu.component.html',\n  styleUrls: ['./left-menu.component.sass']\n})\nexport class LeftMenuComponent implements OnInit {\n    score = new PlayerScore()\n    highscores = [new PlayerScore(), new PlayerScore(), new PlayerScore(), new PlayerScore(), new PlayerScore()]\n    player!: ShipComponent\n    gameObjectService = inject(GameObjectService);\n\n    ngOnInit(): void {\n        this.gameObjectService.onGameStart.subscribe(this.handleSceneReady.bind(this))\n    }\n\n    handleSceneReady() {\n        this.player = this.gameObjectService.gameObjects.get('player') as ShipComponent\n        if (this.player === undefined) throw new Error('player not found')\n        this.player.onShotFired.subscribe(this.handlePlayerShotFired.bind(this))\n        this.player.onEnemyKilled.subscribe(this.handleEnemyKilled.bind(this))\n    }\n\n    handlePlayerShotFired() {\n        this.score.shotsFired++\n    }\n\n    handleEnemyKilled() {\n        this.score.hits++\n    }\n\n    top10() {\n        return this.highscores.sort((a, b) => b.hits - a.hits).slice(0, 10)\n    }\n}\n","<div class=\"w-100 bg-secondary rounded p-3 mb-3 mt-3\">\n  <div class=\"mb-3\">\n    <h3 class=\"text-light\">Score</h3>\n    <div class=\"row\">\n      <div class=\"col-6 text-light\">\n        <span>Shots</span>\n      </div>\n      <div class=\"col-6 text-light\">\n        <span>{{ score.shotsFired }}</span>\n      </div>\n      <div class=\"col-6 text-light\">\n        <span>Hits</span>\n      </div>\n      <div class=\"col-6 text-light\">\n        <span>{{ score.hits }}</span>\n      </div>\n      <div class=\"col-6 text-light\">\n        <span>Accuracy</span>\n      </div>\n      <div class=\"col-6 text-light\">\n        <span>{{ score.accuracy() | percent }}</span>\n      </div>\n    </div>\n  </div>\n  <hr class=\"text-light\" style=\"margin-left: -16px; margin-right: -16px\" />\n  <div class=\"mb-3\">\n    <h3 class=\"text-light\">High Scores</h3>\n    <div *ngFor=\"let score of top10()\">\n      <div class=\"row\">\n        <div class=\"col-6 text-light\">\n          <span>{{ score.name }}</span>\n        </div>\n        <div class=\"col-6 text-light\">\n          <span>{{ score.accuracy() | percent }}</span>\n        </div>\n      </div>\n    </div>\n  </div>\n  <hr class=\"text-light\" style=\"margin-left: -16px; margin-right: -16px\" />\n  <!-- <hr class=\"mx-n3\"/> -->\n  <div>\n    <div class=\"mb-3\">\n      <input\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        class=\"form-control\"\n        [(ngModel)]=\"score.name\"\n      />\n    </div>\n    <button class=\"btn btn-primary\">Submit Score</button>\n  </div>\n</div>\n<!-- <button routerLink=\"/\" routerLinkActive=\"active\" class=\"btn btn-primary\" style=\"width: 300px\">Menu</button> -->\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}